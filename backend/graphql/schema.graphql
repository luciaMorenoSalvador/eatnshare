### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""The possible authentication providers"""
enum AuthProvider {
  GOOGLE
  OWN
}

"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
"""
scalar BigInt

type ChefProfile implements Profile {
  """Profile reports created by this profile"""
  createdProfileReports: [ProfileReport!]!

  """Recipe reports created by this profile"""
  createdRecipeReports: [RecipeReport!]!

  """The favorite recipes of this profile"""
  favoriteRecipes: [Recipe!]!

  """The photo associated with this profile"""
  photo: ProfilePhoto

  """Profile reports againts this profile"""
  profileReports: [ProfileReport!]!

  """Ratings given by this profile"""
  recipeRatings: [Rating!]!

  """The recipes created by this profile"""
  recipes: [Recipe!]!
  stars: Int!

  """The user that owns this profile"""
  user: User!
  userId: String!
  username: ID!
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

type Ingredient {
  name: String!
  quantity: String!

  """The recipe that has this ingredient"""
  recipe: Recipe!
  recipeId: String!
}

type Mutation {
  """Authenticate an user"""
  authenticate(email: String!, password: String!): UserToken

  """Authenticate an user with Google IdP"""
  authenticateGoogle(idToken: String!): UserToken

  """Create a new account"""
  createAccount(email: String!, name: String!, password: String!): UserToken
}

interface Photo {
  """The date and time at which this photo was created at"""
  createdAt: Date!
  downloadLink: String!
  id: ID!
  md5: String!
  mimeType: String!
}

interface Profile {
  """Profile reports created by this profile"""
  createdProfileReports: [ProfileReport!]!

  """Recipe reports created by this profile"""
  createdRecipeReports: [RecipeReport!]!

  """The favorite recipes of this profile"""
  favoriteRecipes: [Recipe!]!

  """The photo associated with this profile"""
  photo: ProfilePhoto

  """Profile reports againts this profile"""
  profileReports: [ProfileReport!]!

  """Ratings given by this profile"""
  recipeRatings: [Rating!]!

  """The recipes created by this profile"""
  recipes: [Recipe!]!

  """The user that owns this profile"""
  user: User!
  userId: String!
  username: ID!
}

type ProfilePhoto implements Photo {
  """The date and time at which this photo was created at"""
  createdAt: Date!
  downloadLink: String!
  id: ID!
  md5: String!
  mimeType: String!

  """The profile that has this photo"""
  profile: Profile!
  profileUsername: String!
}

type ProfileReport implements Report {
  """The author of this report"""
  author: Profile!
  authorUsername: String!
  createdAt: Date!
  id: ID!
  reason: String!

  """The profile that was reported"""
  reported: Profile!
  reportedUsername: String!
}

type Query {
  """Get a user by its Id"""
  getUserById(userId: String!): User

  """Get users in the system"""
  getUsers: [User!]!
}

type Rating {
  """The profile that gave this rating"""
  author: Profile!
  authorUsername: String!
  rating: Int!

  """The recipe that received this rating"""
  recipe: Recipe!
  recipeId: String!
}

type Recipe {
  """The author of this recipe"""
  author: Profile!
  authorUsername: String!

  """The average rating of this recipe"""
  averageRating: Float!
  createdAt: Date!

  """The profiles that have marked this recipe as favorite"""
  favoritesOf: [Profile!]!
  id: ID!

  """The ingredients of this recipe"""
  ingredients: [Ingredient!]!

  """The photos of this recipe"""
  photos: [RecipePhoto!]!

  """The ratings given to this recipe"""
  ratings: [Rating!]!

  """Reports against this recipe"""
  reports: [RecipeReport!]!

  """The steps of this recipe"""
  steps: [Step!]!
  updatedAt: Date!

  """The video for this recipe"""
  video: Video
}

type RecipePhoto implements Photo {
  """The date and time at which this photo was created at"""
  createdAt: Date!
  downloadLink: String!
  id: ID!
  md5: String!
  mimeType: String!

  """The recipe that has this photo"""
  recipe: Recipe!
  recipeId: String!
}

type RecipeReport implements Report {
  """The author of this report"""
  author: Profile!
  authorUsername: String!
  createdAt: Date!
  id: ID!
  reason: String!

  """The recipe that was reported"""
  recipe: Recipe!
  recipeId: String!
}

interface Report {
  """The author of this report"""
  author: Profile!
  authorUsername: String!
  createdAt: Date!
  id: ID!
  reason: String!
}

"""The possible roles for a user"""
enum Role {
  ADMIN
  USER
}

type Step {
  description: String!
  number: Int!

  """Recipe photos of this particular step"""
  photos: [StepPhoto!]!

  """The recipe of this step"""
  recipe: Recipe!
  recipeId: String!

  """The timer for this step"""
  timer: StepTimer

  """The tool required to perform the step"""
  tool: StepTool

  """The video marker for this step"""
  videoMarker: StepVideoMarker
}

type StepPhoto implements Photo {
  """The date and time at which this photo was created at"""
  createdAt: Date!
  downloadLink: String!
  id: ID!
  md5: String!
  mimeType: String!

  """The recipe that has this photo"""
  recipe: Recipe!
  recipeId: String!

  """The step of the recipe that has this photo"""
  step: Step!
  stepNumber: Int!
}

type StepTimer {
  recipeId: String!
  seconds: BigInt!

  """The recipe step that has this timer"""
  step: Step!
  stepNumber: Int!
}

type StepTool {
  description: String!
  link: String!
  recipeId: String!

  """The recipe step that has this tool"""
  step: Step!
  stepNumber: Int!
}

type StepVideoMarker {
  recipeId: String!
  seconds: BigInt!

  """The step associated with this marker"""
  step: Step!
  stepNumber: Int!

  """The video associated with the recipe"""
  video: Video!
  videoId: String!
}

type User {
  """The authentication provider used to create this account"""
  authProvider: AuthProvider!

  """The date and time at which the user was created"""
  createdAt: Date!
  email: String!
  id: ID!
  name: String!

  """The profile associated with this user"""
  profile: Profile

  """The role of the user"""
  role: Role!

  """The date and time at which the user was last updated"""
  updatedAt: Date!

  """The tokens associated with the user account"""
  userTokens: [UserToken!]!
}

type UserProfile implements Profile {
  """Profile reports created by this profile"""
  createdProfileReports: [ProfileReport!]!

  """Recipe reports created by this profile"""
  createdRecipeReports: [RecipeReport!]!

  """The favorite recipes of this profile"""
  favoriteRecipes: [Recipe!]!

  """The photo associated with this profile"""
  photo: ProfilePhoto

  """Profile reports againts this profile"""
  profileReports: [ProfileReport!]!

  """Ratings given by this profile"""
  recipeRatings: [Rating!]!

  """The recipes created by this profile"""
  recipes: [Recipe!]!

  """The user that owns this profile"""
  user: User!
  userId: String!
  username: ID!
}

type UserToken {
  accessToken: String!
  device: String!
  id: ID!

  """The date and time at which this token was last used at"""
  lastUsedAt: Date!

  """The user that owns this token"""
  user: User!
  userId: String!
}

type Video {
  """The date and time at which this video was created at"""
  createdAt: Date!
  id: ID!

  """The provider of this video"""
  provider: VideoProvider!
  video: String!
}

enum VideoProvider {
  YOUTUBE
}
